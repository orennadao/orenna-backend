generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(cuid())
  address     String    @unique
  email       String?   @unique
  isAdmin     Boolean   @default(false)
  createdAt   DateTime  @default(now())
  lastLoginAt DateTime?

  mintRequests MintRequest[] @relation("MintRequestRequester")
  approvals    MintRequest[] @relation("MintRequestApprover")
}

model LiftUnit {
  id         Int       @id @default(autoincrement())
  externalId String?   @unique
  status     String    @default("DRAFT") // was enum LiftUnitStatus
  quantity   Decimal?
  unit       String? // e.g. "LU"
  meta       String? // was Json; store stringified JSON
  issuedAt   DateTime?
  retiredAt  DateTime?

  events LiftUnitEvent[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([status])
}

model LiftUnitEvent {
  id         Int      @id @default(autoincrement())
  liftUnitId Int
  type       String // was enum LiftUnitEventType
  txId       String?
  payload    String? // was Json; store stringified JSON
  meta       String? // was Json; store stringified JSON
  eventAt    DateTime @default(now())

  liftUnit LiftUnit @relation(fields: [liftUnitId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@unique([liftUnitId, type, txId])
  @@index([liftUnitId, type])
}

model Project {
  id           Int      @id @default(autoincrement())
  name         String
  slug         String   @unique
  description  String?
  ownerAddress String?
  chainId      Int?
  meta         String? // must be String for SQLite
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model MintRequest {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  requesterId String
  requester   User   @relation("MintRequestRequester", fields: [requesterId], references: [id])

  projectId String?
  tokenId   Int
  amount    Int
  meta      String? // was Json; store stringified JSON
  status    String  @default("PENDING") // was enum MintStatus

  approvedById String?
  approvedBy   User?     @relation("MintRequestApprover", fields: [approvedById], references: [id])
  approvedAt   DateTime?

  txHash     String?
  executedAt DateTime?

  @@index([status])
  @@index([requesterId])
}
