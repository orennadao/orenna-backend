name: CI
on:
  push:
    branches: ['**']
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orenna
        options: >-
          --health-cmd="pg_isready -U postgres -d orenna"
          --health-interval=5s --health-timeout=5s --health-retries=20

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/orenna

    steps:
      - uses: actions/checkout@v4

      # 1) Node (no pnpm cache here)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      # 2) Install pnpm (action) with Corepack fallback
      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      # 3) Cache the pnpm store
      - name: Get pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      # 4) Install + run
      - name: Install deps
        env:
          PNPM_CONFIG_FROZEN_LOCKFILE: "false"
        run: pnpm -w install --no-frozen-lockfile

      - name: DB migrate + seed
        run: |
          pnpm -w db:migrate
          pnpm -w db:seed || true

      - name: Typecheck
        run: pnpm -w typecheck

      - name: Test
        run: pnpm -w test

