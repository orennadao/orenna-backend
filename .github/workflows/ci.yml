name: CI
on:
  push:
    branches: ['**']
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orenna_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/orenna

    steps:
      - uses: actions/checkout@v4

      # 1) Node (no pnpm cache here)
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true

      # 2) Install pnpm (action) with Corepack fallback
      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      # 3) Cache the pnpm store
      - name: Get pnpm store path
        run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        with:
          path: ${{ env.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      # 4) Install + run
      - name: Install dependencies
        run: pnpm install
        
      - name: Run migrations
        run: pnpm -w db:migrate
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/orenna_test
          
      - name: Run tests
        run: pnpm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/orenna_test

      - name: Typecheck
        run: pnpm -w typecheck

      - name: Test
        run: pnpm -w test

