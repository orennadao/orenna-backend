name: CI
on:
  push:
    branches: ['**']
  pull_request:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orenna
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d orenna"
          --health-interval=5s --health-timeout=5s --health-retries=20

    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/orenna

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      # Try official pnpm action (fastest)
      - name: Setup pnpm (action)
        id: setup_pnpm
        continue-on-error: true
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      # Fallback if the action is blocked
      - name: Enable pnpm via Corepack (fallback)
        if: steps.setup_pnpm.outcome == 'failure'
        run: |
          corepack enable
          corepack prepare pnpm@9 --activate

      - name: Show versions
        run: |
          node -v
          pnpm -v

      - name: Install deps
        run: pnpm -w install --frozen-lockfile

      - name: DB migrate + seed
        run: |
          pnpm -w db:deploy
          pnpm -w db:seed || true

      - name: Typecheck
        run: pnpm -w typecheck

      - name: Test
        run: pnpm -w test
